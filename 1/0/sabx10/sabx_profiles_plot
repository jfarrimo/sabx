#!/usr/bin/python
###############################################################################
#
# sabx10 - an SABX file manipulation library
# Copyright (C) 2009, 2010 Jay Farrimond (jay@sabikerides.com)
#
# This file is part of sabx10.
#
# sabx10 is free software: you can redistribute it and/or modify it under the
# terms of the GNU General Public License as published by the Free Software
# Foundation, either version 3 of the License, or (at your option) any later
# version.
#
# sabx10 is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR
# A PARTICULAR PURPOSE.  See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with
# sabx10.  If not, see <http://www.gnu.org/licenses/>.
#
###############################################################################
"""
NAME

    sabx_profiles_plot - plot the elevation profiles for a ride

SYNOPSIS

    sabx_profiles_plot [OPTION] <output file base>

DESCRIPTION

    Plot the elevation profiles for a ride.  Optionally, plot the profiles for
    all of the segments as well.  Also, choose if you want to plot them in high
    resolution or not.

    -i INFILE, --infile=INFILE
        SABX 1.0 file to read from

    -r, --hires
        plot profiles in high resolution?

    -s, --segs
        plot profiles for segments?

    -m, --man
        print this extended help and exit

    -h, --help
        print basic help and exit

AUTHOR

    Jay Farrimond

REPORTING BUGS

    Report bugs to <jay@sabikerides.com>

SEE ALSO

    The complete specification for SABX 1.0 files is available at 
    http://www.sabikerides.com/sabx/1/0/

    The library that this utility is built on (sabx-lib) is available at
    http://www.sabikerides.com/sabx/lib/index.html

COPYRIGHT

    sabx10 - an SABX file manipulation library
    Copyright (C) 2009, 2010 Jay Farrimond (jay@sabikerides.com)

    This file is part of sabx10.

    sabx10 is free software: you can redistribute it and/or modify it under the
    terms of the GNU General Public License as published by the Free Software
    Foundation, either version 3 of the License, or (at your option) any later
    version.

    sabx10 is distributed in the hope that it will be useful, but WITHOUT ANY
    WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
    FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
    details.

    You should have received a copy of the GNU General Public License along
    with sabx10.  If not, see <http://www.gnu.org/licenses/>.
"""
import getopt
import os.path
import sys

from sabx10.oxm import parse_no_def_namespaces
from sabx10.profiles import plot_all_rides

def usage():
    print """usage: sabx_profiles_plot [Options] <output file base>

Options:
  -i, --infile            SABX file to read data from
  -r, --hires             plot profiles in high resolution?
  -s, --segs              plot profiles for segments?
  -h, --help              show this help message and exit
  -m, --man-page          display the man page and exit"""

def handle_options():
    try:
        opts, args = getopt.getopt(sys.argv[1:], "hmi:rs", 
                                   ["help", "man-page", "infile=", 
                                    "hires", "segs"])
    except getopt.GetoptError, err:
        print str(err)
        usage()
        sys.exit(2)

    in_file = sys.stdin
    hires = False
    segs = False
    for o, a in opts:
        if o in ("-i", "--infile"):
            in_file = a
        elif o in ("-r", "--hires"):
            hires = True
        elif o in ("-s", "--segs"):
            segs = True
        elif o in ("-h", "--help"):
            usage()
            sys.exit(0)
        elif o in ("-m", "--man-page"):
            print __doc__
            sys.exit(0)
        else:
            usage()
            sys.exit(2)

    if len(args) != 1:
        usage()
        sys.exit(2)

    graph_dir = os.path.dirname(args[0])
    graph_file = os.path.basename(args[0])

    return in_file, graph_dir, graph_file, hires, segs

if __name__ == '__main__':
    try:
        in_file, graph_dir, graph_file, hires, segs = handle_options()
        tree = parse_no_def_namespaces(in_file)
        plot_all_rides(tree, graph_file, graph_dir, hires, segs)
    except Exception as exc:
        print "ERROR ENCOUNTERED: %s" % exc
        sys.exit(2)
